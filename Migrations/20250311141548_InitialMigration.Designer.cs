// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zoo_management.Database;

#nullable disable

namespace Zoo_management.Migrations
{
    [DbContext(typeof(ZooManagementContext))]
    [Migration("20250311141548_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("EnclosureZooKeeper", b =>
                {
                    b.Property<int>("EnclosuresEnclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZooKeepersZooKeeperId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnclosuresEnclosureId", "ZooKeepersZooKeeperId");

                    b.HasIndex("ZooKeepersZooKeeperId");

                    b.ToTable("EnclosureZooKeeper");
                });

            modelBuilder.Entity("Zoo_management.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Classification")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateAcquired")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnclosureId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZooKeeperId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimalId");

                    b.HasIndex("EnclosureId");

                    b.HasIndex("ZooKeeperId");

                    b.ToTable("Animal");

                    b.HasData(
                        new
                        {
                            AnimalId = 1,
                            Classification = 0,
                            DateAcquired = new DateOnly(2025, 3, 10),
                            DateOfBirth = new DateOnly(2020, 3, 15),
                            EnclosureId = 1,
                            Name = "Musafa",
                            Sex = 0,
                            Species = "Lion",
                            Status = 0,
                            ZooKeeperId = 1
                        },
                        new
                        {
                            AnimalId = 2,
                            Classification = 0,
                            DateAcquired = new DateOnly(2020, 5, 20),
                            DateOfBirth = new DateOnly(2017, 3, 15),
                            EnclosureId = 2,
                            Name = "Hippolus",
                            Sex = 1,
                            Species = "Hippo",
                            Status = 0,
                            ZooKeeperId = 1
                        },
                        new
                        {
                            AnimalId = 3,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Elm",
                            Sex = 1,
                            Species = "Elephant",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 4,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Jack",
                            Sex = 1,
                            Species = "Rhino",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 5,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Tally",
                            Sex = 1,
                            Species = "Giraffe",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 6,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Sam",
                            Sex = 1,
                            Species = "Ostritch",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 7,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Emma",
                            Sex = 1,
                            Species = "Zebra",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 8,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Rina",
                            Sex = 1,
                            Species = "Elephant",
                            Status = 0,
                            ZooKeeperId = 1
                        },
                        new
                        {
                            AnimalId = 9,
                            Classification = 0,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Tigerooo",
                            Sex = 1,
                            Species = "Tiger",
                            Status = 0,
                            ZooKeeperId = 2
                        },
                        new
                        {
                            AnimalId = 10,
                            Classification = 2,
                            DateAcquired = new DateOnly(1990, 7, 12),
                            DateOfBirth = new DateOnly(1985, 7, 12),
                            EnclosureId = 1,
                            Name = "Prince",
                            Sex = 0,
                            Species = "Hawk",
                            Status = 0,
                            ZooKeeperId = 1
                        });
                });

            modelBuilder.Entity("Zoo_management.Models.Enclosure", b =>
                {
                    b.Property<int>("EnclosureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxNumberOfAnimals")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EnclosureId");

                    b.ToTable("Enclosure");

                    b.HasData(
                        new
                        {
                            EnclosureId = 1,
                            MaxNumberOfAnimals = 10,
                            Name = "Lion’s Enclosure"
                        },
                        new
                        {
                            EnclosureId = 2,
                            MaxNumberOfAnimals = 10,
                            Name = "Hippo’s Enclosure"
                        });
                });

            modelBuilder.Entity("Zoo_management.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfTransfer")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransferedZoo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("Zoo_management.Models.ZooKeeper", b =>
                {
                    b.Property<int>("ZooKeeperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ZooKeeperId");

                    b.ToTable("ZooKeeper");

                    b.HasData(
                        new
                        {
                            ZooKeeperId = 1,
                            Name = "Vani"
                        },
                        new
                        {
                            ZooKeeperId = 2,
                            Name = "Siuzanna"
                        });
                });

            modelBuilder.Entity("EnclosureZooKeeper", b =>
                {
                    b.HasOne("Zoo_management.Models.Enclosure", null)
                        .WithMany()
                        .HasForeignKey("EnclosuresEnclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zoo_management.Models.ZooKeeper", null)
                        .WithMany()
                        .HasForeignKey("ZooKeepersZooKeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zoo_management.Models.Animal", b =>
                {
                    b.HasOne("Zoo_management.Models.Enclosure", "Enclosure")
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zoo_management.Models.ZooKeeper", "ZooKeeper")
                        .WithMany("Animals")
                        .HasForeignKey("ZooKeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enclosure");

                    b.Navigation("ZooKeeper");
                });

            modelBuilder.Entity("Zoo_management.Models.Transfer", b =>
                {
                    b.HasOne("Zoo_management.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("Zoo_management.Models.Enclosure", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Zoo_management.Models.ZooKeeper", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
